name: Test And Deploy

on:
  push:
    branches:
      - master

jobs:
  unitTest:
    name: Unit-Test
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 10

    - uses: actions/cache@v1
      id: cache
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-v0-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-v0-

    - name: Run Unit Tests
      run: ./scripts/run-unit-tests.sh



  build:
    needs: unitTest
    name: Build And Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 10

    - uses: actions/cache@v1
      id: cache
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-v0-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-v0-

    - name: Build
      run: ./scripts/build-deploy.sh build ${{ github.event.before }} ${{ github.sha }}
      id: build

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: services/**/bin/*

    - name: Install Serverless Plugins
      if: ${{steps.build.outputs.deploy == 'true'}}
      run: sudo npm i serverless -g

    - name: Configure-Creds
      if: ${{steps.build.outputs.deploy == 'true'}}
      run: ./scripts/configure-creds.sh ${{secrets.AWS_ACCESS_KEY_ID}} ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Serverless Deploy
      if: ${{steps.build.outputs.deploy == 'true'}}
      run: sudo ./scripts/build-deploy.sh deploy ${{ github.event.before }} ${{ github.sha }}

